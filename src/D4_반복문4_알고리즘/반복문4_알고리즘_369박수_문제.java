package D4_반복문4_알고리즘;

public class 반복문4_알고리즘_369박수_문제 {

	public static void main(String[] args) {
		/*
		 *  [369게임]
		 * 1. 1~50까지 반복을 한다.
		 * 2. 그 안에서 해당 숫자의 369게임의 결과를 출력한다.
		 * 
		 * 3. 각각의 숫자에 3이나 6이나 9가 두개 면 "짝짝"
		 * 4. 각각의 숫자에 3이나 6이나 9가 한개 면 "짝"
		 * 5. 3이나 6이나 9가 없으면 그냥 숫자출력 
		 * 
		 * 예) 1 2 짝 4 5 짝 7 8 짝 10 11 12 짝 ...
		 */
		
//		int i = 0;
//		int n10 = 0;
//		int n1 = 0;
//		
//		for(i =1; i <=50; i++) {
//			n10 = i/10;
//			n1 = i%10;
//			System.out.println(i);
//			if(n10 == 3 || n10 == 6 || n10 == 9) { //일의자리부터 체크하고 십의자리 체크하기!!
//				if(n1 == 3 || n1 == 6 || n1 ==9) { // 잘못생각함
//					System.out.println("짝짝");
//				}else {
//					System.out.println("짝");
//				}
//			}
//		}
		
//		int i = 1;
//		int n10 = 0;
//		int n1 = 0;
//		
//		while(i <= 50) {
//			n10 = i/10;
//			n1 = i%10;
//			System.out.println(i);
//			if(n1 == 3 || n1 == 6 || n1 == 9) {
//				if(n10 == 3 || n10 == 6 || n10 == 9) {
//					System.out.println("짝짝");
//					
//				}else {
//					System.out.println("짝");
//				}
//			
//			}
//			i += 1;
//		}
		
		/*
		 * 
		 *  [369게임]
		 * 1. 1~50까지 반복을 한다.
		 * 2. 그 안에서 해당 숫자의 369게임의 결과를 출력한다.
		 * 
		 * 3. 각각의 숫자에 3이나 6이나 9가 두개 면 "짝짝"
		 * 4. 각각의 숫자에 3이나 6이나 9가 한개 면 "짝"
		 * 5. 3이나 6이나 9가 없으면 그냥 숫자출력 
		 * 
		 * 예) 1 2 짝 4 5 짝 7 8 짝 10 11 12 짝 ...
		 */
		// 십의 자리, 일의자리 구분하여 계산
		// 십의자리 + 일의자리 369 있으면 짝짝
		// 일의자리 369 있으면 짝
		// 없으면 숫자출력
		int i = 0;
		
		//int count = 0;
		for(i = 1; i <= 50; i++) {
			int a = i / 10; // 한번돌고 재설정해줘야함 -> 매번 i 값을 10으로 나눠서 첫번째 조건문과 비교 확인
			int b = i % 10; // 한번돌고 재설정해줘야함 -> 매번 i 값을 10으로 나눈 나머지를 두번째 조건문과 비교 확인
			int count = 0;  // 한번돌고 재설정해줘야함 -> 1회 완료후 0으로 카운트 초기화 i가 증가시마다 매번 초기화
			if(a == 3 || a == 6 || a == 9) {
				count += 1;
			}
			if(b == 3 || b == 6 || b == 9) {
				count += 1;
			}
			if(count == 2) {
				System.out.println("짝짝");
			}else if(count == 1) {
				System.out.println("짝");
			}else {
				System.out.println(i);
			}
		
		}

	}

}
